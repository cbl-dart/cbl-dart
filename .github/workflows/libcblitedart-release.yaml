name: libcblitedart release

on:
  push:
    tags:
      - 'libcblitedart-v*'

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload_url }}
      tag: ${{ steps.set-outputs.outputs.tag }}
      release: ${{ steps.set-outputs.outputs.release }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Set outputs
        id: set-outputs
        run: |
          echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=release::${GITHUB_REF/refs\/tags\/libcblitedart-v/}"

  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        os:
          - iOS
          - macOS
          - Android
          - Ubuntu
          - Windows
    runs-on: >-
      ${{ fromJSON('{
        "iOS":"macos-14",
        "macOS":"macos-14",
        "Android":"ubuntu-22.04",
        "Ubuntu":"ubuntu-22.04",
        "Windows":"windows-2022"
      }')[matrix.os] }}

    steps:
      - uses: actions/checkout@v4

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Setup Melos
        run: dart pub global activate melos

      - name: Setup CBL Dart dev tools
        run: melos run activate:cbd

      - name: Install Android Native Toolchain
        if: ${{ matrix.os == 'Android' }}
        run: ./native/tools/android-sdk.sh installNativeToolchain

      - name: Build release
        shell: bash
        run: |
          TARGET=""

          case ${{ matrix.os }} in
            iOS)
              TARGET="ios"
              ;;
            macOS)
              TARGET="macos"
              ;;
            Android)
              TARGET="android"
              ;;
            Ubuntu)
              TARGET="linux-x86_64"
              ;;
            Windows)
              TARGET="windows-x86_64"
              ;;
          esac

          ./native/couchbase-lite-dart/tools/build_release.sh \
            ${{ needs.create-release.outputs.release }} \
            $TARGET

      - name: Upload archives
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./native/couchbase-lite-dart/build/release/*"]'
