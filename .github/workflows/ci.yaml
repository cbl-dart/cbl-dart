name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  formatting-dart:
    name: Formatting - Dart
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Check formatting
        run: melos run formatting:check

  formatting-clang:
    name: Formatting - Clang
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check formatting
        uses: jidicula/clang-format-action@v3.1.0
        with:
          check-path: 'native/cbl-dart/src'

  analyze-dart:
    name: Analyze Dart code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Analyze code
        run: melos run analyze

  tests-cbl:
    name: Tests - cbl
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Run tests
        run: melos run test:cbl

  tests-cbl_native:
    name: Tests - cbl_native
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Run tests
        run: melos run test:cbl_native

  tests-standalone-dart-linux:
    name: Tests - Standalone Dart - Linux
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Get CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: tests-standalone-dart-linux

      - name: Build native binaries
        run: ./native/tools/build_unix.sh build Debug

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Start test Couchbase cluster
        run: melos run test:setupCouchbaseClusterDocker

      - name: Run tests
        run: |
          ulimit -c unlimited
          sudo sysctl -w kernel.core_pattern=core
          melos run test:standalone_dart

      - name: Print debug info
        if: failure()
        working-directory: packages/cbl_e2e_tests_standalone_dart
        run: |
          if [ ! -f ./core ]; then
            echo "Did not find core dump"
            exit 0
          fi

          echo "::group::Instal gdb"
          sudo apt-get install gdb
          echo "::endgroup::"

          echo "::group::Print back trace"
          gdb -batch -ex 'thread apply all bt' "$(which dart)" core
          echo "::endgroup::"

  tests-standalone-dart-macos:
    name: Tests - Standalone Dart - macOS
    runs-on: macos-10.15
    timeout-minutes: 45
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: tests-standalone-dart-macos

      # Doxygen is needed in build of Couchbase-Lite-C, which cannot be easily changed.
      # bash >=4 is needed in build_apple.sh.
      - name: Install dependencies with brew
        run: brew install doxygen bash

      - name: Build native binaries
        run: ./native/tools/build_apple.sh build macos Debug

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        uses: ./.github/actions/setup-dart-env

      - name: Start test Couchbase cluster
        run: melos run test:setupCouchbaseClusterMacOS

      - name: Run tests
        run: melos run test:standalone_dart

  tests-flutter-ios:
    name: Tests - Flutter - iOS
    runs-on: macos-10.15
    timeout-minutes: 45
    env:
      CBL_FLUTTER_SKIP_INSTALL_BINARIES: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: tests-flutter-ios

      # Doxygen is needed in build of Couchbase-Lite-C, which cannot be easily changed.
      # bash >=4 is needed in build_apple.sh.
      - name: Install dependencies with brew
        run: brew install doxygen bash

      - name: Build native binaries
        run: ./native/tools/build_apple.sh build ios_simulator Debug

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        env:
          SKIP_MELOS_BOOTSTRAP: true
        uses: ./.github/actions/setup-dart-env

      - name: Prepare flutter projects
        run: melos run flutter:prepare

      - name: Start test Couchbase cluster
        run: melos run test:setupCouchbaseClusterMacOS

      - name: Start simulator
        uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 12'
          erase_before_boot: false
          shutdown_after_job: false

      - name: Run tests
        run: melos run test:flutter:ios

  tests-flutter-macos:
    name: Tests - Flutter - macOS
    runs-on: macos-10.15
    timeout-minutes: 45
    env:
      CBL_FLUTTER_SKIP_INSTALL_BINARIES: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: tests-flutter-macos

      # Doxygen is needed in build of Couchbase-Lite-C, which cannot be easily changed.
      # bash >=4 is needed in build_apple.sh.
      - name: Install dependencies with brew
        run: brew install doxygen bash

      - name: Build native binaries
        run: ./native/tools/build_apple.sh build macos Debug

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        env:
          SKIP_MELOS_BOOTSTRAP: true
        uses: ./.github/actions/setup-dart-env

      - name: Enable Flutter on macOS
        run: flutter config --enable-macos-desktop

      - name: Prepare flutter projects
        run: melos run flutter:prepare

      - name: Start test Couchbase cluster
        run: melos run test:setupCouchbaseClusterMacOS

      - name: Run tests
        run: melos run test:flutter:macos

  tests-flutter-android:
    name: Tests - Flutter - Android
    runs-on: macos-10.15
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: test-flutter-android

      - name: Build
        run: ./native/tools/build_android.sh build Debug

      - name: Cache Dart dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            dart-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
            dart-pub-cache

      - name: Setup Dart environment
        env:
          SKIP_MELOS_BOOTSTRAP: true
        uses: ./.github/actions/setup-dart-env

      - name: Prepare flutter projects
        run: melos run flutter:prepare

      - name: Start test Couchbase cluster
        run: melos run test:setupCouchbaseClusterMacOS

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cache

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 22
          force-avd-creation: false
          emulator-options: 
            -no-window 
            -gpu swiftshader_indirect 
            -noaudio 
            -camera-back none 
            -camera-front none 
            -no-boot-anim
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # We need to use API level > 21 because of a bug related to the splash screen in Flutter
          # There is a PR with a fix which has not landed in stable yet:
          # https://github.com/flutter/engine/pull/26083
          api-level: 22
          force-avd-creation: false
          emulator-options: 
            -no-window 
            -gpu swiftshader_indirect 
            -noaudio 
            -camera-back none 
            -camera-front none 
            -no-boot-anim 
            -no-snapshot-save 
            -logcat *:d
          disable-animations: true
          script: |
            # Start port forwarding of Sync Gateway to emulator
            adb reverse tcp:4984 tcp:4984
            adb reverse tcp:4985 tcp:4985

            melos run test:flutter:android
