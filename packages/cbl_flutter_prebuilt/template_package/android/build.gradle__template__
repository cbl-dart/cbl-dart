plugins {
    id "com.android.library"
    id "kotlin-android"
}

import org.apache.tools.ant.taskdefs.condition.Os

group 'com.terwesten.gabriel.{{name}}'
version '1.0-SNAPSHOT'

def flutterRoot = System.getenv("FLUTTER_ROOT")
if (flutterRoot == null) {
    throw new GradleException("FLUTTER_ROOT environment variable not set")
}

def dartExecutable = "${flutterRoot}/bin/cache/dart-sdk/bin/dart"
    // Ensure the path is cross-platform.
    .replace("/", File.separator)

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

android {
    namespace 'com.terwesten.gabriel.{{name}}'
    compileSdk 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdk 22
    }
}

dependencies {
}

task activateCblFlutter(type: Exec) {
    commandLine dartExecutable, 'pub', 'global', 'activate', 'cbl_flutter_install', '{{cblFlutterInstallVersion}}'

    standardOutput = new ByteArrayOutputStream()
    errorOutput = new ByteArrayOutputStream()
    ignoreExitValue = true

    doLast {
        if (executionResult.get().exitValue != 0) {
            throw new GradleException(
                "Failed to activate cbl_flutter_install:\n" +
                "${standardOutput.toString().trim()}\n" +
                "${errorOutput.toString().trim()}"
            )
        }
    }
}

task installLibraries(type: Exec) {
    workingDir "$projectDir/.."
    commandLine dartExecutable, 'pub', 'global', 'run', 'cbl_flutter_install', 'android'
}

tasks.installLibraries.dependsOn(activateCblFlutter)
tasks.preBuild.dependsOn(installLibraries)
