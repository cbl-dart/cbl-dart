"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86],{1235:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"data-sync/peer-to-peer/websocket","title":"Data Sync Peer-to-Peer","description":"Couchbase Lite database Peer-to-Peer Synchronization concepts using websockets","source":"@site/docs/data-sync/peer-to-peer/websocket.mdx","sourceDirName":"data-sync/peer-to-peer","slug":"/data-sync/peer-to-peer/websocket","permalink":"/data-sync/peer-to-peer/websocket","draft":false,"unlisted":false,"editUrl":"https://github.com/cbl-dart/cbl-dart/tree/main/docs/docs/data-sync/peer-to-peer/websocket.mdx","tags":[],"version":"current","frontMatter":{"title":"Data Sync Peer-to-Peer","description":"Couchbase Lite database Peer-to-Peer Synchronization concepts using websockets","related_content":[{"name":"Passive Peer","url":"/data-sync/peer-to-peer/passive-peer"},{"name":"Active Peer","url":"/data-sync/peer-to-peer/active-peer"}]},"sidebar":"sidebar","previous":{"title":"Indexes","permalink":"/indexing"},"next":{"title":"Passive Peer","permalink":"/data-sync/peer-to-peer/passive-peer"}}');var s=i(4848),r=i(8453);const c={title:"Data Sync Peer-to-Peer",description:"Couchbase Lite database Peer-to-Peer Synchronization concepts using websockets",related_content:[{name:"Passive Peer",url:"/data-sync/peer-to-peer/passive-peer"},{name:"Active Peer",url:"/data-sync/peer-to-peer/active-peer"}]},o="Data Sync Peer-to-Peer",l={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Security",id:"security",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Passive peers",id:"passive-peers",level:4},{value:"Active peers",id:"active-peers",level:4},{value:"Delta Sync",id:"delta-sync",level:3},{value:"Conflict Resolution",id:"conflict-resolution",level:3},{value:"Constraints",id:"constraints",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"API Highlights",id:"api-highlights",level:2},{value:"<code>UrlEndpointListener</code>",id:"urlendpointlistener",level:3},{value:"<code>UrlEndpointListenerConfiguration</code>",id:"urlendpointlistenerconfiguration",level:3},{value:"<code>port</code>",id:"port",level:4},{value:"<code>networkInterface</code>",id:"networkinterface",level:4},{value:"<code>disableTls</code>",id:"disabletls",level:4},{value:"<code>tlsIdentity</code>",id:"tlsidentity",level:4},{value:"<code>authenticator</code>",id:"authenticator",level:4},{value:"<code>readOnly</code>",id:"readonly",level:4},{value:"<code>enableDeltaSync</code>",id:"enabledeltasync",level:4},{value:"Security",id:"security-1",level:2},{value:"TLS Identity",id:"tls-identity",level:3},{value:"Authentication Mechanisms",id:"authentication-mechanisms",level:3},{value:"Using Secure Storage",id:"using-secure-storage",level:3},{value:"iOS",id:"ios",level:4},{value:"macOS",id:"macos",level:4},{value:"Windows",id:"windows",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{CodeExample:t,EnterpriseFeatureCallout:c,MetaHeader:o}=n;return t||p("CodeExample",!0),c||p("EnterpriseFeatureCallout",!0),o||p("MetaHeader",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.header,{children:[(0,s.jsx)(n.h1,{id:"data-sync-peer-to-peer",children:"Data Sync Peer-to-Peer"}),(0,s.jsx)(o,{})]}),"\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"Couchbase Lite's Peer-to-Peer synchronization solution offers secure storage and\nbidirectional data synchronization between edge devices without needing a\ncentralized cloud-based control point."}),"\n",(0,s.jsx)(n.p,{children:"Couchbase Lite's Peer-to-Peer data synchronization provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Instant WebSocket-based listener for use in Peer-to-Peer applications\ncommunicating over IP-based networks."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Simple application development, enabling sync with a short amount of code."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Optimized network bandwidth usage and reduced data transfer costs with Delta\nSync support."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Securely sync data with built-in support for Transport Layer Security (TLS)\nencryption and authentication support."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Document management. Reducing conflicts in concurrent writes with built-in\nconflict management support."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Built-in network resiliency."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Peer-to-Peer synchronization requires one Peer to act as the Listener to the\nother Peer's replicator."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Listener Diagram",src:i(8093).A+"",width:"1500",height:"521"})}),"\n",(0,s.jsxs)(n.p,{children:["Peer-to-Peer synchronization requires one Peer to act as the Listener to the\nother Peer's replicator. Therefore, to use Peer-to-Peer synchronization in your\napplication, you must configure one Peer to act as a Listener using the\nCouchbase Listener API, the most important of which include\n",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListener-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListener"})})," and ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListenerConfiguration-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListenerConfiguration"})}),"."]}),"\n",(0,s.jsx)(t,{id:1,title:"Simple Workflow",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Configure the Listener (",(0,s.jsx)(n.em,{children:"passive peer"}),", or ",(0,s.jsx)(n.em,{children:"server"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Initialize the Listener, which listens for incoming WebSocket connections (on\na user-defined, or auto-selected, port)."}),"\n",(0,s.jsxs)(n.li,{children:["Configure a replicator (",(0,s.jsx)(n.em,{children:"active peer"}),", or ",(0,s.jsx)(n.em,{children:"client"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Use some form of discovery phase, perhaps with a zero-config protocol such as\n",(0,s.jsx)(n.a,{href:"https://developer.apple.com/bonjour/",children:"Bonjour"}),", or use known URL endpoints,\nto identify a Listener."]}),"\n",(0,s.jsx)(n.li,{children:"Point the replicator at the Listener."}),"\n",(0,s.jsx)(n.li,{children:"Initialize the replicator."}),"\n",(0,s.jsx)(n.li,{children:"Replicator and Listener engage in the configured security protocol exchanges\nto confirm connection."}),"\n",(0,s.jsx)(n.li,{children:"If connection is confirmed then replication will commence, synchronizing the\ntwo data stores."}),"\n"]})}),"\n",(0,s.jsxs)(n.p,{children:["Here you can see configuration involves a\n",(0,s.jsx)(n.a,{href:"/data-sync/peer-to-peer/passive-peer",children:"Passive Peer"})," and an\n",(0,s.jsx)(n.a,{href:"/data-sync/peer-to-peer/active-peer",children:"Active Peer"})," and a user-friendly Listener\nconfiguration in ",(0,s.jsx)(n.a,{href:"#basic-setup",children:"Basic Setup"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.p,{children:"Couchbase Lite for Dart's Peer-to-Peer synchronization solution provides support\nfor cross-platform synchronization, for example, between Android and iOS\ndevices."}),"\n",(0,s.jsx)(n.p,{children:"Each listener instance serves a single Couchbase Lite database, enabling\nsynchronization for documents within specified collections of that database."}),"\n",(0,s.jsx)(n.p,{children:"Having a Listener on a database still allows you to open replications to the\nother clients. For example, a Listener can actively begin replicating to other\nListeners while listening for connections. These replications can be for the\nsame or a different database."}),"\n",(0,s.jsx)(n.p,{children:"The Listener will automatically select a port to use or a user-specified port.\nIt will also listen on all available networks, unless you specify a specific\nnetwork."}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsx)(n.p,{children:"Couchbase Lite's Peer-to-Peer synchronization supports encryption and\nauthentication over TLS with multiple modes, including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No encryption, for example, clear text."}),"\n",(0,s.jsx)(n.li,{children:"CA Cert"}),"\n",(0,s.jsx)(n.li,{children:"Self-signed Cert"}),"\n",(0,s.jsxs)(n.li,{children:["Anonymous Self-signed \u2014 an auto-generated anonymous TLS identity is generated\nif no identity is specified. This TLS identity provides encryption but ",(0,s.jsx)(n.strong,{children:"not"}),"\nauthentication."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The replicator (client) can handle certificates pinned by the Listener for\nauthentication purposes."}),"\n",(0,s.jsx)(n.p,{children:"Support is also provided for basic authentication using username and password\ncredentials. Whilst this can be used in clear text mode, developers are strongly\nadvised to use TLS encryption."}),"\n",(0,s.jsx)(n.p,{children:"For testing and development purposes, support is provided for the client\n(active, replicator) to skip verification of self-signed certificates; this mode\nshould not be used in production."}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"When a Listener is stopped, then all connected replicators are notified by a\nWebSocket error. Your application should distinguish between transient and\npermanent connectivity errors."}),"\n",(0,s.jsx)(n.h4,{id:"passive-peers",children:"Passive peers"}),"\n",(0,s.jsx)(n.p,{children:"A Passive Peer losing connectivity with an Active Peer will clean up any\nassociated endpoint connections to that Peer. The Active Peer may attempt to\nreconnect to the Passive Peer."}),"\n",(0,s.jsx)(n.h4,{id:"active-peers",children:"Active peers"}),"\n",(0,s.jsx)(n.p,{children:"An Active Peer permanently losing connectivity with a Passive Peer will cease\nreplicating."}),"\n",(0,s.jsx)(n.p,{children:"An Active Peer temporarily losing connectivity with a passive Peer will use\nexponential backoff functionality to attempt reconnection."}),"\n",(0,s.jsx)(n.h3,{id:"delta-sync",children:"Delta Sync"}),"\n",(0,s.jsx)(n.p,{children:"Optional delta-sync support is provided but is inactive by default."}),"\n",(0,s.jsx)(n.p,{children:"Delta-sync can be enabled on a per-replication basis provided that the databases\ninvolved are also configured to permit it."}),"\n",(0,s.jsx)(n.h3,{id:"conflict-resolution",children:"Conflict Resolution"}),"\n",(0,s.jsx)(n.p,{children:"Conflict resolution for Peer-to-Peer synchronization works in the same way as it\ndoes for Sync Gateway replication, with both custom and automatic resolution\navailable."}),"\n",(0,s.jsx)(n.h2,{id:"constraints",children:"Constraints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Requires at least iOS 10 (dependency on keychains)"}),"\n",(0,s.jsxs)(n.li,{children:["Persisted ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/TlsIdentity-class.html",children:(0,s.jsx)(n.code,{children:"TlsIdentity"})}),"s are not supported yet on Android\n(",(0,s.jsx)(n.a,{href:"https://github.com/cbl-dart/cbl-dart/issues/779",children:"#779"}),") and Linux. You can\nuse ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/KeyPair/fromExternal.html",children:(0,s.jsx)(n.code,{children:"KeyPair.fromExternal"})})," to implement your own solution for secure\nstorage of private keys."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsxs)(n.p,{children:["You can configure a Peer-to-Peer synchronization with just a short amount of\ncode as shown here in ",(0,s.jsx)(n.a,{href:"#example-2",children:"Example 2"})," and ",(0,s.jsx)(n.a,{href:"#example-3",children:"Example 3"}),"."]}),"\n",(0,s.jsxs)(t,{id:2,title:"Simple Listener",children:[(0,s.jsx)(n.p,{children:"This simple listener configuration will give you a listener ready to participate\nin an encrypted synchronization with a replicator providing a valid user name\nand password."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:'// 1.\nfinal config = UrlEndpointListenerConfiguration(collections: [collection]);\n\n// 2.\nconfig.authenticator = ListenerPasswordAuthenticator((username, password) {\n  return username == "valid.user" && password == "valid.pass";\n});\n\n// 3.\nfinal listener = await UrlEndpointListener.create(config);\n\n// 4.\nawait listener.start();\n'})}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Initialize the Listener configuration."}),"\n",(0,s.jsx)(n.li,{children:"Configure the client authenticator to require basic authentication."}),"\n",(0,s.jsx)(n.li,{children:"Initialize the Listener."}),"\n",(0,s.jsx)(n.li,{children:"Start the Listener."}),"\n"]})]}),"\n",(0,s.jsxs)(t,{id:3,title:"Simple Replicator",children:[(0,s.jsx)(n.p,{children:"This simple replicator configuration will give you an encrypted, bi-directional\nPeer-to-Peer synchronization with automatic conflict resolution."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:'// 1.\nfinal targetEndpoint = UrlEndpoint(Uri.parse("wss://10.1.1.12:8092/otherDB"));\n\n// 2.\nfinal config = ReplicatorConfiguration(target: targetEndpoint)\n  ..addCollection(collection);\n\n// 3.\nconfig.acceptOnlySelfSignedServerCertificate = true;\n\n// 4.\nconfig.authenticator = BasicAuthenticator(\n  username: "valid.user",\n  password: "valid.pass",\n);\n\n// 5\nfinal replicator = await Replicator.create(config);\n\n// 6.\nawait replicator.start();\n'})}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Get the Listener's endpoint. Here we use a known URL, but it could be a URL\nestablished dynamically in a discovery phase."}),"\n",(0,s.jsx)(n.li,{children:"Initialize the replicator configuration with the collection to be\nsynchronized and the endpoint of the Listener it is to be synchronize with."}),"\n",(0,s.jsx)(n.li,{children:"Configure the replicator to expect a self-signed certificate from the\nListener."}),"\n",(0,s.jsx)(n.li,{children:"Configure the replicator to present basic authentication credentials if the\nListener prompts for them (client authentication is optional)."}),"\n",(0,s.jsx)(n.li,{children:"Initialize the replicator."}),"\n",(0,s.jsx)(n.li,{children:"Start the replicator."}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"api-highlights",children:"API Highlights"}),"\n",(0,s.jsx)(n.h3,{id:"urlendpointlistener",children:(0,s.jsx)(n.code,{children:"UrlEndpointListener"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListener-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListener"})})," is the listener for peer-to-peer synchronization.\nIt acts like a passive replicator, in the same way that Sync Gateway does in a\n'standard' replication. On the client side, the listener's endpoint is used to\npoint the replicator to the listener."]}),"\n",(0,s.jsx)(n.p,{children:"Core functionalities of the listener are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Users can initialize the class using a ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListenerConfiguration-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListenerConfiguration"})}),"\nobject."]}),"\n",(0,s.jsx)(n.li,{children:"The listener can be started, or can be stopped."}),"\n",(0,s.jsx)(n.li,{children:"Once the listener is started, a total number of connections or active\nconnections can be checked."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"urlendpointlistenerconfiguration",children:(0,s.jsx)(n.code,{children:"UrlEndpointListenerConfiguration"})}),"\n",(0,s.jsx)(n.p,{children:"Use this to create a configuration object you can then use to initialize the\nlistener."}),"\n",(0,s.jsx)(n.h4,{id:"port",children:(0,s.jsx)(n.code,{children:"port"})}),"\n",(0,s.jsx)(n.p,{children:"This is the port that the listener will listen to."}),"\n",(0,s.jsx)(n.p,{children:"If the port is null or zero, the listener will auto-assign an available port to\nlisten on."}),"\n",(0,s.jsx)(n.p,{children:"Default value is null."}),"\n",(0,s.jsx)(n.h4,{id:"networkinterface",children:(0,s.jsx)(n.code,{children:"networkInterface"})}),"\n",(0,s.jsx)(n.p,{children:"Use this to select a specific Network Interface to use, in the form of the IP\nAddress or network interface name."}),"\n",(0,s.jsx)(n.p,{children:"If the network interface is specified, only that interface will be used."}),"\n",(0,s.jsx)(n.p,{children:"If the network interface is not specified, all available network interfaces will\nbe used."}),"\n",(0,s.jsx)(n.h4,{id:"disabletls",children:(0,s.jsx)(n.code,{children:"disableTls"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListenerConfiguration-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListenerConfiguration"})}),"'s ",(0,s.jsx)(n.code,{children:"disableTls"})," property to\ndisable TLS communication if necessary."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"disableTls"})," setting must be ",(0,s.jsx)(n.code,{children:"false"})," when ",(0,s.jsx)(n.em,{children:"Client Cert Authentication"})," is\nrequired."]}),"\n",(0,s.jsx)(n.p,{children:"Basic Authentication can be used with, or without, TLS."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"disableTls"})," works in conjunction with ",(0,s.jsx)(n.code,{children:"tlsIdentity"}),", to enable developers to\ndefine the key and certificate to be used."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"disableTls"})," is true \u2014 TLS communication is disabled and TLS identity is\nignored. Active peers will use the ",(0,s.jsx)(n.code,{children:"ws://"})," URL scheme used to connect to the\nlistener."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"disableTls"})," is false or not specified \u2014 TLS communication is enabled."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Active peers will use the ",(0,s.jsx)(n.code,{children:"wss://"})," URL scheme to connect to the listener."]}),"\n",(0,s.jsx)(n.h4,{id:"tlsidentity",children:(0,s.jsx)(n.code,{children:"tlsIdentity"})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListenerConfiguration-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListenerConfiguration"})}),"'s ",(0,s.jsx)(n.code,{children:"tlsIdentity"})," property to configure\nthe TLS Identity used in TLS communication."]}),"\n",(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/TlsIdentity-class.html",children:(0,s.jsx)(n.code,{children:"TlsIdentity"})})," is not set, then the listener uses an auto-generated\nanonymous self-signed identity (unless ",(0,s.jsx)(n.code,{children:"disableTls = true"}),"). Whilst the client\ncannot use this to authenticate the server, it will use it to encrypt\ncommunication, giving a more secure option than non-TLS communication."]}),"\n",(0,s.jsx)(n.p,{children:"When the listener is not started, the identity is null. When TLS is disabled,\nthe identity is always null."}),"\n",(0,s.jsx)(n.h4,{id:"authenticator",children:(0,s.jsx)(n.code,{children:"authenticator"})}),"\n",(0,s.jsx)(n.p,{children:"Use this to specify the authenticator the listener uses to authenticate the\nclient's connection request. This should be set to one of the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/ListenerPasswordAuthenticator-class.html",children:(0,s.jsx)(n.code,{children:"ListenerPasswordAuthenticator"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/ListenerCertificateAuthenticator-class.html",children:(0,s.jsx)(n.code,{children:"ListenerCertificateAuthenticator"})})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"null"})," \u2014 there is no authentication."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"readonly",children:(0,s.jsx)(n.code,{children:"readOnly"})}),"\n",(0,s.jsx)(n.p,{children:"Use this to allow only pull replication. Default value is false."}),"\n",(0,s.jsx)(n.h4,{id:"enabledeltasync",children:(0,s.jsx)(n.code,{children:"enableDeltaSync"})}),"\n",(0,s.jsx)(n.p,{children:"The option to enable Delta Sync and replicate only changed data also depends on\nthe delta sync settings at database level. The default value is false."}),"\n",(0,s.jsx)(n.h2,{id:"security-1",children:"Security"}),"\n",(0,s.jsx)(n.p,{children:"Couchbase Lite's Peer-to-Peer synchronization ensures secure communication\nthrough TLS and supports multiple authentication mechanisms."}),"\n",(0,s.jsx)(n.h3,{id:"tls-identity",children:"TLS Identity"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListener-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListener"})})," uses a TLS identity to establish secure\nconnections. (A TLS identity is an RSA public/private key pair and certificate.)\nThe identity can include either a certificate signed by a trusted Certificate\nAuthority (CA), or a self-signed certificate. If no identity is specified, the\nlistener automatically generates an anonymous, self-signed certificate, which is\nprimarily used for encryption, but not for authentication."]}),"\n",(0,s.jsx)(n.p,{children:"When replicating with a listener that uses a self-signed certificate, the\nreplicator (client) can be configured to skip certificate validation. This\noption is useful for development or testing, but not recommended for production."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The minimum supported version of TLS is TLS 1.2."})}),"\n",(0,s.jsx)(n.h3,{id:"authentication-mechanisms",children:"Authentication Mechanisms"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/cbl/latest/cbl/UrlEndpointListener-class.html",children:(0,s.jsx)(n.code,{children:"UrlEndpointListener"})})," supports two authentication mechanisms:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Basic Authentication, using a username and password."}),"\n",(0,s.jsx)(n.li,{children:"Certificate Authentication, which authenticates clients using client\ncertificates, and is only available when TLS is enabled."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"using-secure-storage",children:"Using Secure Storage"}),"\n",(0,s.jsx)(n.p,{children:"TLS and its associated keys and certificates might require using secure storage\nto minimize the chances of a security breach. The implementation of this storage\ndiffers from platform to platform. This table summarizes the secure storage used\nto store keys and certificates."}),"\n",(0,s.jsx)(n.h4,{id:"ios",children:"iOS"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Key Storage"})}),(0,s.jsx)(n.td,{children:"KeyChain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Certificate Storage"})}),(0,s.jsx)(n.td,{children:"KeyChain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Notes"})}),(0,s.jsx)(n.td,{children:"Use kSecAttrLabel of the SecCertificate to store the TLSIdentity's label"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reference"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://developer.apple.com/documentation/security/keychain_services",children:"Keychain services"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"macos",children:"macOS"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Key Storage"})}),(0,s.jsx)(n.td,{children:"KeyChain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Certificate Storage"})}),(0,s.jsx)(n.td,{children:"KeyChain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Notes"})}),(0,s.jsx)(n.td,{children:"Use kSecAttrLabel of the SecCertificate to store the TLSIdentity's label"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reference"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://developer.apple.com/documentation/security/keychain_services",children:"Keychain services"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"windows",children:"Windows"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Value"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Key Storage"})}),(0,s.jsx)(n.td,{children:"Windows CNG Key Storage Provider"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Certificate Storage"})}),(0,s.jsx)(n.td,{children:"Windows Certificate Store"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reference"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/windows/win32/seccng/cng-portal",children:"CNG Key Storage"})})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8093:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/docs-listener-diagram-07ab1a117f78d81619d616f3887818d6.png"},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);