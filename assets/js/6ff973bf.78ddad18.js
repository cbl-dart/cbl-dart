"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[222],{1228:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"indexing","title":"Indexes","description":"Couchbase mobile database indexes and indexing concepts","source":"@site/docs/indexing.mdx","sourceDirName":".","slug":"/indexing","permalink":"/indexing","draft":false,"unlisted":false,"editUrl":"https://github.com/cbl-dart/cbl-dart/tree/main/docs/docs/indexing.mdx","tags":[],"version":"current","frontMatter":{"description":"Couchbase mobile database indexes and indexing concepts","related_content":[{"name":"Databases","url":"/databases"},{"name":"Documents","url":"/documents"},{"name":"Indexing","url":"/indexing"}]},"sidebar":"sidebar","previous":{"title":"Vector Search","permalink":"/vector-search"},"next":{"title":"Typed Data","permalink":"/typed-data"}}');var a=i(4848),r=i(8453);const d={description:"Couchbase mobile database indexes and indexing concepts",related_content:[{name:"Databases",url:"/databases"},{name:"Documents",url:"/documents"},{name:"Indexing",url:"/indexing"}]},s="Indexes",o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Creating a new index",id:"creating-a-new-index",level:2},{value:"SQL++",id:"sql",level:3},{value:"QueryBuilder",id:"querybuilder",level:3},{value:"Summary",id:"summary",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{CodeExample:i,MetaHeader:t}=n;return i||x("CodeExample",!0),t||x("MetaHeader",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.header,{children:[(0,a.jsx)(n.h1,{id:"indexes",children:"Indexes"}),(0,a.jsx)(t,{})]}),"\n",(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(n.p,{children:"Before we begin querying documents, let's briefly mention the importance of\nhaving an appropriate and balanced approach to indexes."}),"\n",(0,a.jsx)(n.p,{children:"Creating indexes can speed up the performance of queries. A query will typically\nreturn results more quickly if it can take advantage of an existing database\nindex to search, narrowing down the set of documents to be examined."}),"\n",(0,a.jsx)(n.admonition,{title:"Constraints",type:"note",children:(0,a.jsx)(n.p,{children:"Couchbase Lite does not currently support partial value indexes; indexes with\nnon-property expressions. You should only index with properties that you plan to\nuse in the query."})}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-new-index",children:"Creating a new index"}),"\n",(0,a.jsx)(n.p,{children:"You can use SQL++ or QueryBuilder syntaxes to create an index."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"#example-2",children:"Example 2"})," creates a new index for the ",(0,a.jsx)(n.code,{children:"type"})," and ",(0,a.jsx)(n.code,{children:"name"})," properties, shown\nin this data model:"]}),"\n",(0,a.jsx)(i,{id:1,title:"Data Model",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "_id": "hotel123",\n  "type": "hotel",\n  "name": "The Michigander",\n  "overview": "Ideally situated for exploration of the Motor City and the wider state of Michigan. Tripadvisor rated the hotel ...",\n  "state": "Michigan"\n}\n'})})}),"\n",(0,a.jsx)(n.h3,{id:"sql",children:"SQL++"}),"\n",(0,a.jsx)(n.p,{children:"The code to create the index will look something like this:"}),"\n",(0,a.jsx)(i,{id:2,title:"Create index with SQL++",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"final config = ValueIndexConfiguration(['type', 'name']);\nawait collection.createIndex('TypeNameIndex', config);\n"})})}),"\n",(0,a.jsx)(n.h3,{id:"querybuilder",children:"QueryBuilder"}),"\n",(0,a.jsx)(n.p,{children:"The code to create the index will look something like this:"}),"\n",(0,a.jsx)(i,{id:3,title:"Create index QueryBuilder",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"final typeExpression = Expression.property('type');\nfinal nameExpression = Expression.property('name');\nfinal valueIndexItems = {\n\tValueIndexItem.expression(typeExpression),\n\tValueIndexItem.expression(nameExpression),\n};\nfinal index = IndexBuilder.valueIndex(valueIndexItems);\nawait collection.createIndex('TypeNameIndex', index);\n"})})}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"When planning the indexes you need for your database, remember that while\nindexes make queries faster, they may also:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Make writes slightly slower, because each index must be updated whenever a\ndocument is updated."}),"\n",(0,a.jsx)(n.li,{children:"Make your Couchbase Lite database slightly larger."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["So too many indexes may hurt performance. Optimal performance depends on\ndesigning and creating the ",(0,a.jsx)(n.em,{children:"right"})," indexes to go along with your queries."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>s});var t=i(6540);const a={},r=t.createContext(a);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);