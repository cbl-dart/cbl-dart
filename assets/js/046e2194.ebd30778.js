"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[568],{6708:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"install","title":"Install","description":"Installing Couchbase Lite for Dart","source":"@site/docs/install.mdx","sourceDirName":".","slug":"/install","permalink":"/install","draft":false,"unlisted":false,"editUrl":"https://github.com/cbl-dart/cbl-dart/tree/main/docs/docs/install.mdx","tags":[],"version":"current","frontMatter":{"description":"Installing Couchbase Lite for Dart","related_content":[{"name":"General Concepts","url":"/general-concepts"},{"name":"Supported Platforms","url":"/supported-platforms"}]},"sidebar":"sidebar","previous":{"title":"Overview","permalink":"/"},"next":{"title":"General Concepts","permalink":"/general-concepts"}}');var i=n(4848),s=n(8453);const r={description:"Installing Couchbase Lite for Dart",related_content:[{name:"General Concepts",url:"/general-concepts"},{name:"Supported Platforms",url:"/supported-platforms"}]},l="Install",o={},d=[{value:"Flutter",id:"flutter",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Standalone Dart",id:"standalone-dart",level:2},{value:"Verify Installation",id:"verify-installation",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{MetaHeader:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MetaHeader",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.header,{children:[(0,i.jsx)(t.h1,{id:"install",children:"Install"}),(0,i.jsx)(n,{})]}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Couchbase Lite for Dart supports most platforms, including Android, iOS, macOS,\nWindows, and Linux. To learn more about supported platforms and supported\nversions, see ",(0,i.jsx)(t.a,{href:"/supported-platforms",children:"Supported platforms"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["If you want to use Couchbase Lite in a standalone Dart app, such as a CLI or\nserver, jump to ",(0,i.jsx)(t.a,{href:"#standalone-dart",children:"Standalone Dart"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"flutter",children:"Flutter"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Run the following command to add the ",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl"})})," and\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_flutter/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_flutter"})})," packages as dependencies:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"flutter pub add cbl cbl_flutter\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Choose between the Community and Enterprise edition."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The Community edition is free and open source. The Enterprise edition is free\nfor development and testing, but requires a license for production use. To\nlearn more about the differences between the Community and Enterprise\neditions, see ",(0,i.jsx)(t.a,{href:"https://www.couchbase.com/products/editions#cmobile",children:"Couchbase Lite editions"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["To use the ",(0,i.jsx)(t.strong,{children:"Community edition"}),", run the following command to add the\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_flutter_ce/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_flutter_ce"})})," package as a dependency:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"flutter pub add cbl_flutter_ce\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To use the ",(0,i.jsx)(t.strong,{children:"Enterprise edition"}),", run the following command to add the\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_flutter_ee/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_flutter_ee"})})," package as a dependency"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"flutter pub add cbl_flutter_ee\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Make sure that you have set the required\n",(0,i.jsx)(t.a,{href:"/supported-platforms",children:"minimum target versions"})," in the build systems of\nthe platforms you want to support."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Initialize Couchbase Lite before using it:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'package:cbl_flutter/cbl_flutter.dart';\n\nFuture<void> main() async {\n  await CouchbaseLiteFlutter.init();\n  runApp(MyApp());\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,i.jsxs)(t.p,{children:["You can use Couchbase Lite in Flutter unit tests but you need to use\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_dart/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_dart"})})," in them. In integration tests, ",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_flutter/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_flutter"})})," works\njust fine."]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Add ",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_dart/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_dart"})})," as a development dependency."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"flutter pub add --dev cbl_dart\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In your unit tests initialize Couchbase Lite through\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_dart/latest/cbl_dart/CouchbaseLiteDart/init.html",children:(0,i.jsx)(t.code,{children:"CouchbaseLiteDart.init"})})," instead of\n",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_flutter/latest/cbl_flutter/CouchbaseLiteFlutter/init.html",children:(0,i.jsx)(t.code,{children:"CouchbaseLiteFlutter.init"})}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'dart:io';\n\nimport 'package:cbl/cbl.dart';\nimport 'package:cbl_dart/cbl_dart.dart';\nimport 'package:flutter_test/flutter_test.dart';\n\nvoid setupCouchbaseLiteForUnitTests() {\n  setUpAll(() async {\n    // If no `filesDir` is specified when initializing CouchbaseLiteDart, the\n    // working directory is used as the default database directory.\n    // By specifying a `filesDir` here, we can ensure that the tests don't\n    // create databases in the project directory.\n    final tempFilesDir = await Directory.systemTemp.createTemp();\n    await CouchbaseLiteDart.init(\n      edition: Edition.enterprise,\n      filesDir: tempFilesDir.path,\n    );\n  });\n}\n\nvoid main() {\n  setupCouchbaseLiteForUnitTests();\n\n  test('use a database', () async {\n    final db = await Database.openAsync('test');\n    // ...\n  });\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"standalone-dart",children:"Standalone Dart"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Run the following command to add the ",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl"})})," and ",(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_dart/latest/index.html",children:(0,i.jsx)(t.code,{children:"cbl_dart"})}),"\npackages as dependencies:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"flutter pub add cbl cbl_dart\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Initialize Couchbase Lite before using it:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'package:cbl_dart/cbl_dart.dart';\n\nFuture<void> main() async {\n  await CouchbaseLiteDart.init(edition: Edition.enterprise);\n  // Start using Couchbase Lite ...\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"As part of initializing Couchbase Lite you need to select an edition."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The Community edition is free and open source. The Enterprise edition is free\nfor development and testing, but requires a license for production use. To\nlearn more about the differences between the Community and Enterprise\neditions, see ",(0,i.jsx)(t.a,{href:"https://www.couchbase.com/products/editions#cmobile",children:"Couchbase Lite editions"}),"."]})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://pub.dev/documentation/cbl_dart/latest/cbl_dart/CouchbaseLiteDart/init.html",children:(0,i.jsx)(t.code,{children:"CouchbaseLiteDart.init"})})," downloads the needed native libraries\nif they have not already been cached."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,i.jsxs)(t.p,{children:["To verify that Couchbase Lite is installed correctly, add the following code to\nyour app and call ",(0,i.jsx)(t.code,{children:"verify"})," after initializing Couchbase Lite:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"import 'package:cbl/cbl.dart';\n\nFuture<void> run() async {\n  // Open the database (creating it if it doesn\u2019t exist).\n  final database = await Database.openAsync('database');\n\n  // Create a collection, or return it if it already exists.\n  final collection = await database.createCollection('components');\n\n  // Create a new document.\n  final mutableDocument = MutableDocument({'type': 'SDK', 'majorVersion': 2});\n  await collection.saveDocument(mutableDocument);\n\n  print(\n    'Created document with id ${mutableDocument.id} and '\n    'type ${mutableDocument.string('type')}.',\n  );\n\n  // Update the document.\n  mutableDocument.setString('Dart', key: 'language');\n  await collection.saveDocument(mutableDocument);\n\n  print(\n    'Updated document with id ${mutableDocument.id}, '\n    'adding language ${mutableDocument.string(\"language\")!}.',\n  );\n\n  // Read the document.\n  final document = (await collection.document(mutableDocument.id))!;\n\n  print(\n    'Read document with id ${document.id}, '\n    'type ${document.string('type')} and '\n    'language ${document.string('language')}.',\n  );\n\n  // Create a query to fetch documents of type SDK.\n  print('Querying Documents of type=SDK.');\n  final query = await database.createQuery('''\n    SELECT * FROM components\n    WHERE type = 'SDK'\n  ''');\n\n  // Run the query.\n  final result = await query.execute();\n  final results = await result.allResults();\n  print('Number of results: ${results.length}');\n\n  // Close the database.\n  await database.close();\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var a=n(6540);const i={},s=a.createContext(i);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);